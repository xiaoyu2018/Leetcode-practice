from time import time
nums=[
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
    5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,5,4,-1,7,8,
]

"""
动态规划常用于求得最优解，且不须记录解路径
一般步骤为：暴力->查看递归树->记忆化加速->改写迭代、优化空间效率
"""

# 计时器
def timer(f):
    def _f(nums):
        start=time()
        f(nums)
        end=time()
        print(end-start)
    return _f

@timer
# 暴力穷举
def maxSubArray1(nums):
    def _msa(index):

        if(index==len(nums)-1):
            return nums[index]
        
        return max(nums[index],nums[index]+_msa(index+1))
    
    print(max([_msa(i) for i in range(len(nums))])) 


# 记忆化
@timer
def maxSubArray2(nums):
    record=[nums[0]]*len(nums)
    def _msa(index):

        if(index==len(nums)-1):
            return nums[index]

        record[index]=max(nums[index],nums[index]+_msa(index+1))
        
        return record[index]
    _msa(0)
    print(max(record)) 


# 改写迭代、优化空间
@timer
def maxSubArray3(nums):
    lst=len(nums)-1
    res=nums[lst]
    crt=res
    for i in range(lst-1,-1,-1):
        crt=max(nums[i],nums[i]+crt)
        res=max(res,crt)
    
    print(res)


maxSubArray1(nums)
maxSubArray2(nums)
maxSubArray3(nums)

    